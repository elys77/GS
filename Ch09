using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Sockets;
using System.Net;
using System.Text;
using System.Threading.Tasks;
using static System.Collections.Specialized.BitVector32;

namespace Ch02_Main
{
    class Ch09_GameSession : Ch09_Session // 컨텐츠단
    {
        public override void OnConnected(EndPoint endPoint)
        {
            Console.WriteLine($"OnConnected: {endPoint}");

            byte[] sendBuffer = Encoding.UTF8.GetBytes("Welcome to MMORPG Server!");
            Send(sendBuffer);
            Thread.Sleep(1000);
            Disconnect();
        }

        public override void OnDisconnected(EndPoint endPoint)
        {
            Console.WriteLine($"OnDisconnected: {endPoint}");
        }

        public override void OnRecv(ArraySegment<byte> buffer)
        {
            string recvData = Encoding.UTF8.GetString(buffer.Array, buffer.Offset, buffer.Count);
            Console.WriteLine($"[From Client] {recvData}");
        }

        public override void OnSend(int numOfBytes)
        {
            Console.WriteLine($"TransferedBytes: {numOfBytes}");
        }
    }

    internal class Ch09
    {
        static Ch09_Listener _listener = new Ch09_Listener();

        public static void c_Main()
        {
            string host = Dns.GetHostName();
            IPHostEntry hostEntry = Dns.GetHostEntry(host);
            IPAddress ipAddr = hostEntry.AddressList[0];
            IPEndPoint endPoint = new IPEndPoint(ipAddr, 7777);

            _listener.Init(endPoint, () => { return new Ch09_GameSession(); });

            while (true)
            {
                ;
            }
        }
    }
}

// 컨텐츠단과 서버엔진단을 분리하는 작업
// 처음에는 간단간단하게 만들다가 나중에 문제가 발생하면 고치는 것이 좋음
